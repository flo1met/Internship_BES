group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_part, agg_part, file = "../data/data_part_10k_switch_m_f.RData")
rm(data_part, agg_part)
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m"
h_s2 <- "mu_m > mu_f"
h_s3 <- "mu_f > mu_t"
H <- "mu_s > mu_m > mu_f > mu_t"
nsim <- 1e4
# Simulate Data Complete Hypothesis
t1 <- Sys.time()
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500, 5000, 15000),
d = c(0, 0.2, 0.5, 0.8),
c = c(0, 0.2, 0.5, 0.8))
data_comp <- data_comp %>% # add hypotheses
mutate(H = H) %>% # compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 #4.9h
# Calculate PMPs
data_comp <-  data_comp %>%
mutate(PMP1u = BF1u/(BF1u + 1))
agg_comp <- data_comp %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u))
save(data_comp, agg_comp, file = "../data/data_comp_10k.RData")
rm(data_comp, agg_comp)
# Simulate Data Partial Hypotheses
t1 <- Sys.time()
data_part <- simulate(nsim = nsim,
study = 1:3,
n_sample = c(25, 50, 100, 500, 5000),
d = c(0, 0.2, 0.5, 0.8),
c = c(0, 0.2, 0.5, 0.8))
data_part <- data_part %>% # add hypotheses
mutate(H = case_when(
study == 1 ~ h_s1,
study == 2 ~ h_s2,
study == 3 ~ h_s3)) %>% #compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 # 4h
# Calculate PMPs and do BES
data_part <- data_part %>%
mutate(PMP1u = BF1u/(BF1u + 1)) %>%
group_by(d,c, nsim, n_sample) %>%
mutate(BES_PMP1c = cumprod(PMP1c) / (cumprod(PMP1c) + cumprod(1-PMP1c)),
BES_PMP1u = cumprod(PMP1u) / (cumprod(PMP1u) + cumprod(1-PMP1u)))
agg_part <- data_part %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_part, agg_part, file = "../data/data_part_10k.RData")
rm(data_part, agg_part)
=======
complexity::complexity(3, 1,2,2,3)
complexity::complexity(2, 1,2)
complexity::complexity(4, 1,2,2,3, 3,4)
>>>>>>> Stashed changes
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m > mu_f" # add another hypothesis to get compelxity = 24
h_s2 <- "mu_f > mu_m"
h_s3 <- "mu_f > mu_t"
H <- "mu_s > mu_f > mu_m > mu_t"
nsim <- 1e4
# Simulate Data Partial Hypotheses
t1 <- Sys.time()
data_part <- simulate(nsim = nsim,
study = 1:3,
n_sample = c(25, 50, 100, 500, 5000),
d = c(0, 0.2, 0.5, 0.8),
c = c(0, 0.2, 0.5, 0.8))
data_part <- data_part %>% # add hypotheses
mutate(H = case_when(
study == 1 ~ h_s1,
study == 2 ~ h_s2,
study == 3 ~ h_s3)) %>% #compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 # 4h
# Calculate PMPs and do BES
data_part <- data_part %>%
mutate(PMP1u = BF1u/(BF1u + 1)) %>%
group_by(d,c, nsim, n_sample) %>%
mutate(BES_PMP1c = cumprod(PMP1c) / (cumprod(PMP1c) + cumprod(1-PMP1c)),
BES_PMP1u = cumprod(PMP1u) / (cumprod(PMP1u) + cumprod(1-PMP1u)))
agg_part <- data_part %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_part, agg_part, file = "../data/data_part_10k_change_complexity.RData")
rm(data_part, agg_part)
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m"
h_s2 <- "mu_f > mu_m"
h_s3 <- "mu_f > mu_t"
H <- "mu_s > mu_f > mu_m > mu_t"
nsim <- 1e4
# Simulate Data Complete Hypothesis
t1 <- Sys.time()
data_comp <- simulate(nsim = nsim,
study = 2:3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500, 5000, 15000),
d = c(0, 0.2, 0.5, 0.8),
c = c(0, 0.2, 0.5, 0.8))
data_comp <- data_comp %>% # add hypotheses
mutate(H = H) %>% # compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 #2.5h
# Calculate PMPs
data_comp <-  data_comp %>%
mutate(PMP1u = BF1u/(BF1u + 1)) %>%
group_by(d,c, nsim, n_sample) %>%
mutate(BES_PMP1c = cumprod(PMP1c) / (cumprod(PMP1c) + cumprod(1-PMP1c)),
BES_PMP1u = cumprod(PMP1u) / (cumprod(PMP1u) + cumprod(1-PMP1u)))
agg_comp <- data_comp %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_comp, agg_comp, file = "../data/data_comp_10k_2c_6p.RData")
rm(data_comp, agg_comp)
# Simulate Data Partial Hypotheses
t1 <- Sys.time()
data_part <- simulate(nsim = nsim,
study = 1:3,
n_sample = c(25, 50, 100, 500, 5000),
d = c(0, 0.2, 0.5, 0.8),
c = c(0, 0.2, 0.5, 0.8))
data_part <- data_part %>% # add hypotheses
mutate(H = case_when(
study == 1 ~ h_s1,
study == 2 ~ h_s2,
study == 3 ~ h_s3)) %>% #compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 # 2h
# Calculate PMPs and do BES
data_part <- data_part %>%
mutate(PMP1u = BF1u/(BF1u + 1)) %>%
group_by(d,c, nsim, n_sample) %>%
mutate(BES_PMP1c = cumprod(PMP1c) / (cumprod(PMP1c) + cumprod(1-PMP1c)),
BES_PMP1u = cumprod(PMP1u) / (cumprod(PMP1u) + cumprod(1-PMP1u)))
agg_part <- data_part %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_part, agg_part, file = "../data/data_part_10k_2c_6p.RData")
rm(data_part, agg_part)
library(tidyverse)
library(ggplot2)
load("../data_part_change_complexity.RData")
load("../data/data_part_change_complexity.RData")
load("../data/data_part_10k_change_complexity.RData")
View(agg_part)
View(agg_part)
# Lineplot
agg_part_filt <- agg_part %>% filter(study == 3 & n_sample != 5000)
agg_part_filt$n_sample <- agg_part_filt$n_sample*3
aggRes <- left_join(agg_part_filt, agg_comp_filt, by = c("d", "c", "n_sample"))
# Lineplot
agg_part_filt <- agg_part %>% filter(study == 3 & n_sample != 5000)
agg_part_filt$n_sample <- agg_part_filt$n_sample*3
#aggRes <- left_join(agg_part_filt, agg_comp_filt, by = c("d", "c", "n_sample"))
agg_part_filt %>% ggplot() +
#geom_line(aes(x = as.factor(n_sample), y = PMP1u.y, linetype = "Complete", color = as.factor(d), group = 1)) +
geom_line(aes(x = as.factor(n_sample), y = BES_PMP1u, linetype = "Partial", color = as.factor(d), group = 1)) +
scale_linetype_manual(name = "Hypothesis", values = c("Complete" = "solid", "Partial" = "longdash")) +
geom_hline(yintercept = 8/(8+1), color = "black", linetype = "dotted", alpha = 0.5) +
labs(x = "Effect Size", y = "Correlation") +
scale_color_discrete(guide = "none") +
theme_bw() +
facet_grid(c~ d) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Lineplot
agg_part_filt <- agg_part %>% filter(study == 3 & n_sample != 5000)
agg_part_filt$n_sample <- agg_part_filt$n_sample*3
#aggRes <- left_join(agg_part_filt, agg_comp_filt, by = c("d", "c", "n_sample"))
agg_part_filt %>% ggplot() +
#geom_line(aes(x = as.factor(n_sample), y = PMP1u.y, linetype = "Complete", color = as.factor(d), group = 1)) +
geom_line(aes(x = as.factor(n_sample), y = BES_PMP1u, linetype = "Partial", color = as.factor(d), group = 1)) +
scale_linetype_manual(name = "Hypothesis", values = c("Complete" = "solid", "Partial" = "longdash")) +
#geom_hline(yintercept = 8/(8+1), color = "black", linetype = "dotted", alpha = 0.5) +
labs(x = "Effect Size", y = "Correlation") +
scale_color_discrete(guide = "none") +
theme_bw() +
facet_grid(c~ d) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(agg_part)
6*8
load("../data/data_comp_10k_2c_6p.RData")
load("../data/data_part_10k_2c_6p.RData")
# Lineplot
agg_part_filt <- agg_part %>% filter(study == 3 & n_sample != 5000)
agg_part_filt$n_sample <- agg_part_filt$n_sample*3
agg_comp_filt <- agg_comp %>% filter(n_sample %in% c(75, 150, 300, 1500))
aggRes <- left_join(agg_part_filt, agg_comp_filt, by = c("d", "c", "n_sample"))
aggRes %>% ggplot() +
geom_line(aes(x = as.factor(n_sample), y = PMP1u.y, linetype = "Complete", color = as.factor(d), group = 1)) +
geom_line(aes(x = as.factor(n_sample), y = BES_PMP1u, linetype = "Partial", color = as.factor(d), group = 1)) +
scale_linetype_manual(name = "Hypothesis", values = c("Complete" = "solid", "Partial" = "longdash")) +
geom_hline(yintercept = 8/(8+1), color = "black", linetype = "dotted", alpha = 0.5) +
labs(x = "Effect Size", y = "Correlation") +
scale_color_discrete(guide = "none") +
theme_bw() +
facet_grid(c~ d) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(aggRes)
View(agg_part_filt)
?left_join
# Lineplot
agg_part_filt <- agg_part %>% filter(study == 3 & n_sample != 5000)
agg_part_filt$n_sample <- agg_part_filt$n_sample*3
agg_comp_filt <- agg_comp %>% filter(n_sample %in% c(75, 150, 300, 1500))
aggRes <- left_join(agg_part_filt, agg_comp_filt, by = c("d", "c", "n_sample"))
aggRes %>% ggplot() +
geom_line(aes(x = as.factor(n_sample), y = BES_PMP1u.y, linetype = "Complete", color = as.factor(d), group = 1)) +
geom_line(aes(x = as.factor(n_sample), y = BES_PMP1u.x, linetype = "Partial", color = as.factor(d), group = 1)) +
scale_linetype_manual(name = "Hypothesis", values = c("Complete" = "solid", "Partial" = "longdash")) +
#geom_hline(yintercept = 8/(8+1), color = "black", linetype = "dotted", alpha = 0.5) +
labs(x = "Effect Size", y = "Correlation") +
scale_color_discrete(guide = "none") +
theme_bw() +
facet_grid(c~ d) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(agg_part_filt)
View(agg_comp_filt)
View(data_comp)
#| include: false
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
#| include: false
library(cmdstanr)
options(mc.cores=4) # run chains on multiple cores
library(tidyverse)
#| include: false
# import data
data <- read.csv("merged_data.csv")
#| include: false
# create d18_O_diff: difference between d18_O and d18_O_w
data$d18_O_diff <- data$d18_O - data$d18_O_w
#| include: false
# prepare data for stan
data_list <- list(
N = nrow(data),
T = data$temperature,
d18_O_diff = data$d18_O_diff
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
fit2$summary()
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
seed = 1337
)
fit2$summary()
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
seed = 1337
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
seed = 1337
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
fit2$summary()
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
fit2$summary()
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
m2_post_draws <- fit2$draws(format = "df")
View(m2_post_draws)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
m2_post_draws <- fit2$draws(format = "df")
fit2$summary()
hist(m2_post_draws$alpha)
fit2$summary()
hist(m2_post_draws$alpha_ppc)
hist(m2_post_draws$beta_ppc)
hist(m2_post_draws$sigma_ppc)
range(m2_post_draws$sigma_ppc)
View(m2_post_draws)
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
m2_post_draws <- fit2$draws(format = "df")
#| include: false
# compile stan model
m2 <- cmdstan_model("m2.stan")
# fit model
fit2 <- m2$sample(
data = data_list,
seed = 1337
)
m2_post_draws <- fit2$draws(format = "df")
fit2$summary()
hist(m2_post_draws$alpha_ppc)
hist(m2_post_draws$beta_ppc)
hist(m2_post_draws$sigma_ppc)
range(m2_post_draws$sigma_ppc)
#| include: false
# import data
data <- read.csv("merged_data.csv")
#| include: false
# create d18_O_diff: difference between d18_O and d18_O_w
data$d18_O_diff <- data$d18_O - data$d18_O_w
#| include: false
# compile stan model
m1 <- cmdstan_model("m1.stan")
#| include: false
# prepare data for stan
data_list <- list(
N = nrow(data),
T = data$temperature,
d18_O_diff = data$d18_O_diff
)
#| include: false
# fit model
fit1 <- m1$sample(
data = data_list,
seed = 1337
)
#| echo: false
fit1$summary()
#| echo: false
m1_post_draws <- fit1$draws(format = "df")
m1_post_draws %>% select(alpha, beta, sigma) %>%
summarise(a_sd = sd(alpha),
b_sd = sd(beta),
s_sd = sd(sigma))
# fit model
fit2 <- m2$sample(
seed = 1337
)
