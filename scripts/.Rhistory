# Boxplots
data_comp %>%
filter(study == 3, n_sample %in% c(75, 150, 300, 1500), c == 0.2, d == 0.2) %>%
ggplot(aes(x = as.factor(n_sample), y = PMP1c)) +
stat_summary(aes(x = as.factor(n_sample), y = PMP1c),
fun = mean,
geom = "line",
group = 1,
linewidth = 0.2) +
geom_boxplot(outlier.alpha = 0.3) +
ylim(0, 1) +
labs(x = "Sample Size", y = "Posterior Model Probabilities") +
theme_minimal()
data_part %>%
filter(study == 6, n_sample != 5000, c == 0.2, d == 0.2) %>%
ggplot(aes(x = as.factor(n_sample), y = BES_PMP1c)) +
stat_summary(aes(x = as.factor(n_sample), y = BES_PMP1c),
fun = mean,
geom = "line",
group = 1,
linewidth = 0.2) +
geom_boxplot(outlier.alpha = 0.3) +
ylim(0, 1) +
labs(x = "Sample Size (per Study)", y = "Posterior Model Probabilities") +
theme_minimal()
## QQ plot
comp_filtered <- data_comp %>%
filter(study == 3 & n_sample %in% c(75, 150, 300, 1500), c == 0.2, d == 0.2) %>%
dplyr::select(n_sample, BES_PMP1c, nsim)
part_filtered <- data_part %>%
filter(study == 6 & n_sample != 5000, c == 0.2, d == 0.2) %>% ungroup %>%
dplyr::select(n_sample, BES_PMP1c, nsim)
part_filtered$n_sample <- part_filtered$n_sample*3
merged_data <- comp_filtered %>%
inner_join(part_filtered, by = c("n_sample", "nsim"), suffix = c("_comp", "_part"))
ggplot(merged_data, aes(sample = BES_PMP1c_part)) +
geom_qq(aes(sample = PMP1c_comp)) +
geom_qq_line(aes(sample = PMP1c_comp), color = "red") +
facet_wrap(~ n_sample) +
labs(x = "Quantiles Complete Hypothesis", y = "Quantiles Partial Hypotheses",
title = "Q-Q Plot: PMPs against complement") +
theme_minimal()
ggplot(merged_data, aes(sample = BES_PMP1c_part)) +
geom_qq(aes(sample = BES_PMP1c_comp)) +
geom_qq_line(aes(sample = BES_PMP1c_comp), color = "red") +
facet_wrap(~ n_sample) +
labs(x = "Quantiles Complete Hypothesis", y = "Quantiles Partial Hypotheses",
title = "Q-Q Plot: PMPs against complement") +
theme_minimal()
## Raincloud Plots
data_comp %>%
filter(study == 3, n_sample %in% c(75, 150, 300, 1500), c == 0.2, d == 0.2) %>%
ggplot(aes(y = factor(n_sample), x = PMP1c, fill = factor(n_sample))) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
) +
stat_dots(
# ploting on left side
side = "right",
# adjusting position
justification = 1.2,
# adjust grouping (binning) of observations
#binwidth = 0.25
alpha = 0.2
) +
# Themes and Labels
scale_fill_tq() +
theme_tq() +
labs(
title = "Complete Hypothesis: PMPs against complement",
x = "PMP1c",
y = "Sample Size",
fill = "Sample Size"
) +
facet_wrap(~ n_sample, scales = "free") +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
data_part %>%
filter(study == 6, n_sample != 5000, c == 0.2, d == 0.2) %>%
ggplot(aes(y = factor(n_sample), x = BES_PMP1c, fill = factor(n_sample))) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
) +
stat_dots(
# ploting on left side
side = "right",
# adjusting position
justification = 1.2,
# adjust grouping (binning) of observations
#binwidth = 0.25
alpha = 0.2
) +
# Themes and Labels
scale_fill_tq() +
theme_tq() +
labs(
title = "Partial Hypotheses: PMPs against complement",
x = "PMP1c",
y = "Sample Size",
fill = "Sample Size"
) +
facet_wrap(~ n_sample, scales = "free") +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
## Raincloud Plots
data_comp %>%
filter(study == 3, n_sample %in% c(75, 150, 300, 1500), c == 0.2, d == 0.2) %>%
ggplot(aes(y = factor(n_sample), x = BES_PMP1c, fill = factor(n_sample))) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
) +
stat_dots(
# ploting on left side
side = "right",
# adjusting position
justification = 1.2,
# adjust grouping (binning) of observations
#binwidth = 0.25
alpha = 0.2
) +
# Themes and Labels
scale_fill_tq() +
theme_tq() +
labs(
title = "Complete Hypothesis: PMPs against complement",
x = "PMP1c",
y = "Sample Size",
fill = "Sample Size"
) +
facet_wrap(~ n_sample, scales = "free") +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
data_part %>%
filter(study == 6, n_sample != 5000, c == 0.2, d == 0.2) %>%
ggplot(aes(y = factor(n_sample), x = BES_PMP1c, fill = factor(n_sample))) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
) +
stat_dots(
# ploting on left side
side = "right",
# adjusting position
justification = 1.2,
# adjust grouping (binning) of observations
#binwidth = 0.25
alpha = 0.2
) +
# Themes and Labels
scale_fill_tq() +
theme_tq() +
labs(
title = "Partial Hypotheses: PMPs against complement",
x = "PMP1c",
y = "Sample Size",
fill = "Sample Size"
) +
facet_wrap(~ n_sample, scales = "free") +
theme(
axis.ticks.y = element_blank(),
axis.text.y = element_blank())
load("../data/data_comp_2500.RData")
load("../data/data_part_2500.RData")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(ggthemes)
library(tidyquant)
load("../data/data_comp_2500_switch_m_f.RData")
load("../data/data_part_2500_switch_m_f.RData")
library(tidyverse)
library(ggplot2)
library(ggdist)
library(ggthemes)
library(tidyquant)
data_part$BES_PMP1c[data_part$BF1c == Inf] <- 1 # set BES_PMP1c to 1 when BF1c is Inf, as this creates NaN
findNaN <- data_part %>% filter(BES_PMP1c == "NaN")
View(findNaN)
source("~/GitHub/Internship_BES/scripts/simulate_data_switch_m_f.R")
source("~/GitHub/Internship_BES/scripts/simulate_data_switch_m_f.R")
source("~/GitHub/Internship_BES/scripts/simulate_data_switch_m_f.R")
source("~/GitHub/Internship_BES/scripts/simulate_data_switch_m_f.R")
load("C:/Users/fmetwaly/OneDrive - UMC Utrecht/Documenten/GitHub/Internship_BES/data/data_comp_2500_switch_m_f.RData")
View(data_comp)
load("C:/Users/fmetwaly/OneDrive - UMC Utrecht/Documenten/GitHub/Internship_BES/data/data_part_2500_switch_m_f.RData")
View(data_part)
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m"
h_s2 <- "mu_f > mu_m"
h_s3 <- "mu_f > mu_t"
H_correct <- "mu_s > mu_m > mu_f > mu_t"
H_wrong <- "mu_s < mu_m < mu_f < mu_t"
H_switch <- "mu_s > mu_f > mu_m > mu_t"
H_null <- "mu_s = mu_f = mu_m = mu_t"
nsim <- 2500
nsim = 1
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(mu_s > mu_m > mu_f > mu_t), 1, 0)
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(mu_s > mu_m > mu_f > mu_t, 1, 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2))
View(data_comp)
data$comp$s_mu
data_comp$s_mu
data_comp$s_mu[1][1]
data_comp$s_mu[1]
data_comp$s_mu[1]$mu_s
data_comp$s_mu[1,1]
data_comp$s_mu[1]
data_comp$s_mu[1][1]
data_comp$s_mu[[1]]
data_comp$s_mu[[1]][1]
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][1] > s_mu[[1]][2] > s_mu[[1]][3] > s_mu[[1]][4], 1, 0))
View(data_comp)
?ifelse
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = if(s_mu[[1]][1] > s_mu[[1]][2] > s_mu[[1]][3] > s_mu[[1]][4]) 1 else 0)
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = (if(s_mu[[1]][1] > s_mu[[1]][2] > s_mu[[1]][3] > s_mu[[1]][4]) 1 else 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = (if(s_mu[[1]][1] > s_mu[[1]][2] & s_mu[[1]][2] > s_mu[[1]][3] & s_mu[[1]][3] > s_mu[[1]][4]) 1 else 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][1] > s_mu[[1]][2] & s_mu[[1]][2] > s_mu[[1]][3] & s_mu[[1]][3] > s_mu[[1]][4], 1, 0))
View(data_comp)
data_comp$s_mu[[1]][1] > data_comp$s_mu[[1]][2] & data_comp$s_mu[[1]][2] > data_comp$s_mu[[1]][3] & data_comp$s_mu[[1]][3] > data_comp$s_mu[[1]][4]
data_comp$s_mu[[1]][1] > data_comp$s_mu[[1]][2] & data_comp$s_mu[[1]][2] > data_comp$s_mu[[1]][3] & data_comp$s_mu[[1]][3] > data_comp$s_mu[[1]][4]
data_comp$s_mu[[1]][[1]] > data_comp$s_mu[[1]][[2]] & data_comp$s_mu[[1]][[2]] > data_comp$s_mu[[1]][[3]] & data_comp$s_mu[[1]][[3]] > data_comp$s_mu[[1]][[4]]
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] & s_mu[[1]][[2]] > s_mu[[1]][[3]] & s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
data_comp$s_mu[[1]][[1]] > data_comp$s_mu[[1]][[2]] & data_comp$s_mu[[1]][[2]] > data_comp$s_mu[[1]][[3]] & data_comp$s_mu[[1]][[3]] > data_comp$s_mu[[1]][[4]]
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] & s_mu[[1]][[2]] > s_mu[[1]][[3]] & s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] & s_mu[[1]][[2]] > s_mu[[1]][[3]] & s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
?apply
apply(data_comp, 1, ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] & s_mu[[1]][[2]] > s_mu[[1]][[3]] & s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
View(data_comp)
apply(data_comp$s_mu, 1, ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] & s_mu[[1]][[2]] > s_mu[[1]][[3]] & s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]] && s_mu[[1]][[2]] > s_mu[[1]][[3]] && s_mu[[1]][[3]] > s_mu[[1]][[4]], 1, 0))
data_comp$s_mu
data_comp$s_mu[[1]]
data_comp$s_mu[[2]]
data_comp$s_mu[[3]]
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][[1]] > s_mu[[1]][[2]], 1, 0))
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2)) %>%
rowwise() %>%
mutate(ind = ifelse(s_mu[[1]][1] > s_mu[[1]][2], 1, 0))
View(data_comp)
data_comp$s_mu[[1]][1] > data_comp$s_mu[[1]][2]
?rowwise
for (i in 1:nrow(data_comp)) {
data_comp$ind[i] <- ifelse(s_mu[[i]][1] > s_mu[[i]][2] > s_mu[[i]][3] > s_mu[[i]][4], 1, 0)
data_comp$ind[i] <- ifelse(s_mu[[i]][1] > s_mu[[i]][2] && s_mu[[i]][2] > s_mu[[i]][3] && s_mu[[i]][3] > s_mu[[i]][4], 1, 0)
data_comp$ind[i] <- ifelse(data_comp$s_mu[[i]][1] > data_comp$s_mu[[i]][2] && data_comp$s_mu[[i]][2] > data_comp$s_mu[[i]][3] && data_comp$s_mu[[i]][3] > data_comp$s_mu[[i]][4], 1, 0)
for (i in 1:nrow(data_comp)) {
data_comp$ind[i] <- ifelse(data_comp$s_mu[[i]][1] > data_comp$s_mu[[i]][2] && data_comp$s_mu[[i]][2] > data_comp$s_mu[[i]][3] && data_comp$s_mu[[i]][3] > data_comp$s_mu[[i]][4], 1, 0)
}
View(data_comp)
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2))
# indicate of compete hypothesis is true
data_comp$ind <- NA
for (i in 1:nrow(data_comp)) {
data_comp$ind[i] <- ifelse(data_comp$s_mu[[i]][1] > data_comp$s_mu[[i]][2] && data_comp$s_mu[[i]][2] > data_comp$s_mu[[i]][3] && data_comp$s_mu[[i]][3] > data_comp$s_mu[[i]][4], 1, 0)
}
View(data_comp)
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m"
h_s2 <- "mu_m > mu_f"
h_s3 <- "mu_f > mu_t"
H <- "mu_s > mu_m > mu_f > mu_t"
nsim <- 1
# Simulate Data Complete Hypothesis
t1 <- Sys.time()
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2))
# indicate of complete hypothesis is true
data_comp$ind <- NA
for (i in 1:nrow(data_comp)) {
data_comp$ind[i] <- ifelse(data_comp$s_mu[[i]][1] > data_comp$s_mu[[i]][2] && data_comp$s_mu[[i]][2] > data_comp$s_mu[[i]][3] && data_comp$s_mu[[i]][3] > data_comp$s_mu[[i]][4], 1, 0)
}
data_comp <- data_comp %>% # add hypotheses
mutate(H = H) %>% # compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 #2.5h
# Calculate PMPs
data_comp <-  data_comp %>%
mutate(PMP1u = BF1u/(BF1u + 1))
agg_comp <- data_comp %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u))
save(data_comp, agg_comp, file = "../data/data_comp_2500.RData")
rm(data_comp, agg_comp)
# Simulate Data Partial Hypotheses
t1 <- Sys.time()
data_part <- simulate(nsim = nsim,
study = 1:3,
n_sample = c(25, 50, 100, 500),
d = c(0.2),
c = c(0.2))
# indicate of complete hypothesis is true
data_comp$ind <- NA
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
library(MASS)
library(tidyverse)
library(BFpack)
source("function.R")
set.seed(1337)
# Set Parameters
h_s1 <- "mu_s > mu_m"
h_s2 <- "mu_m > mu_f"
h_s3 <- "mu_f > mu_t"
H <- "mu_s > mu_m > mu_f > mu_t"
nsim <- 1
# Simulate Data Complete Hypothesis
t1 <- Sys.time()
data_comp <- simulate(nsim = nsim,
study = 3,
n_sample = c(25, 75, 50, 150, 100, 300, 500, 1500),
d = c(0.2),
c = c(0.2))
# indicate of complete hypothesis is true
data_comp$ind <- NA
for (i in 1:nrow(data_comp)) {
data_comp$ind[i] <- ifelse(data_comp$s_mu[[i]][1] > data_comp$s_mu[[i]][2] && data_comp$s_mu[[i]][2] > data_comp$s_mu[[i]][3] && data_comp$s_mu[[i]][3] > data_comp$s_mu[[i]][4], 1, 0)
}
data_comp <- data_comp %>% # add hypotheses
mutate(H = H) %>% # compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 #2.5h
# Calculate PMPs
data_comp <-  data_comp %>%
mutate(PMP1u = BF1u/(BF1u + 1))
agg_comp <- data_comp %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u))
save(data_comp, agg_comp, file = "../data/data_comp_2500.RData")
rm(data_comp, agg_comp)
# Simulate Data Partial Hypotheses
t1 <- Sys.time()
data_part <- simulate(nsim = nsim,
study = 1:3,
n_sample = c(25, 50, 100, 500),
d = c(0.2),
c = c(0.2))
# indicate of complete hypothesis is true
data_part$ind <- NA
for (i in 1:nrow(data_comp)) {
data_part$ind[i] <- ifelse(data_part$s_mu[[i]][1] > data_part$s_mu[[i]][2] && data_part$s_mu[[i]][2] > data_part$s_mu[[i]][3] && data_part$s_mu[[i]][3] > data_part$s_mu[[i]][4], 1, 0)
}
for (i in 1:nrow(data_part)) {
data_part$ind[i] <- ifelse(data_part$s_mu[[i]][1] > data_part$s_mu[[i]][2] && data_part$s_mu[[i]][2] > data_part$s_mu[[i]][3] && data_part$s_mu[[i]][3] > data_part$s_mu[[i]][4], 1, 0)
}
data_part <- data_part %>% # add hypotheses
mutate(H = case_when(
study == 1 ~ h_s1,
study == 2 ~ h_s2,
study == 3 ~ h_s3)) %>% #compute BF
rowwise() %>%
mutate(BF_result = list(BF(x = s_mu,
Sigma = s_Sigma/n_sample,
n = n_sample,
hypothesis = H)),
BF1u = BF_result$BFtu_confirmatory[[1]],
PMP1c = BF_result$PHP_confirmatory[[1]]) %>%
select(-c(s_mu, s_Sigma, BF_result))
t2 <- Sys.time()
t2-t1 # 2h
# Calculate PMPs and do BES
data_part <- data_part %>%
mutate(PMP1u = BF1u/(BF1u + 1)) %>%
group_by(d,c, nsim, n_sample) %>%
mutate(BES_PMP1c = cumprod(PMP1c) / (cumprod(PMP1c) + cumprod(1-PMP1c)),
BES_PMP1u = cumprod(PMP1u) / (cumprod(PMP1u) + cumprod(1-PMP1u)))
agg_part <- data_part %>%
group_by(d, c, n_sample, study) %>%
summarise(BF1u = mean(BF1u),
PMP1c = mean(PMP1c),
PMP1u = mean(PMP1u),
BES_PMP1c = mean(BES_PMP1c),
BES_PMP1u = mean(BES_PMP1u))
save(data_part, agg_part, file = "../data/data_part_2500.RData")
rm(data_part, agg_part)
source("~/GitHub/Internship_BES/scripts/simulate_data.R")
source("~/GitHub/Internship_BES/scripts/simulate_data_change_complexity.R")
source("~/GitHub/Internship_BES/scripts/simulate_data_2c_6p.R")
